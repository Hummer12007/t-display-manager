#!/bin/sh

# TDM, tbk display manager, or tiny display manager, is a
# session selector before login.
# It links the starting script to default and start the 
# startx script.

CONFDIR=~/.tdm
SESSIONS=${CONFDIR}/sessions
EXTRA=${CONFDIR}/extra
SDEFAULT=$(ls -l "${CONFDIR}/default" | awk -F ' -> ' '{print $2}')

fallback(){
	if [[ -n $1 ]]; then
		echo $1
	fi
	exec $SHELL
}

# started from startx, so start session
if [[ -n $1 && $1 = "--xstart" ]]; then
	exec "${CONFDIR}/default"
fi

# X started, exit
if [ $(pgrep -c X) -ne 0 ]; then
	fallback 'X started.'
fi

clear
echo 'This is TDM, a tiny display manager.'
echo 'Please select a session.'

let XID=0
let TOTAL=0
xsessions=()

if [ -d ${SESSIONS} ]; then
	echo "list of X sessions: (default ${SDEFAULT})"
	for script in $(ls ${SESSIONS}); do
		if [ -x "${SESSIONS}/${script}" ]; then
			xsessions[$XID]="${SESSIONS}/${script}"
			echo "$XID ${script}"
			let XID=$(($XID+1))
			let TOTAL=$(($TOTAL+1))
		fi
	done
else
	echo "${SESSIONS} doesn't exist."
	echo "making this directory."
	mkdir -p ${SESSIONS}
fi

if [ -d ${EXTRA} ]; then
	echo "others:"
	for script in $(ls ${EXTRA}); do
		if [ -x "${EXTRA}/${script}" ]; then
			xsessions[$TOTAL]="${EXTRA}/${script}"
			echo "$TOTAL ${script}"
			let TOTAL=$(($TOTAL+1))
		fi
	done
fi

if [ $TOTAL -eq 0 ]; then
	fallback "No sessions found."
fi

echo -n "Session id:"
read sid

if [[ (-n $sid) && ($sid -lt $TOTAL) && ($sid -ge $XID) ]]; then
	exec ${xsessions[$sid]}
elif [[ (-n $sid) && ($sid -lt $XID) && ($sid -ge 0) ]]; then
	ln -sf ${xsessions[${sid}]} "${CONFDIR}/default"
	startx
	logout
else
	echo "Unknown value,load default."
	if [ -x "${CONFDIR}/default" ]; then
		startx
		logout
	else
		fallback
	fi
fi
